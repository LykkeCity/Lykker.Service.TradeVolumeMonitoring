buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('io.swagger:swagger-codegen:2.2.3')
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.2.71'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.2.71'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "application"

group = 'com.lykke'
version = '0.0.1'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}


import io.swagger.codegen.DefaultGenerator
import io.swagger.codegen.config.CodegenConfigurator

def swaggerInput = ["${rootDir}/src/main/swagger/publicApi.json",
                    "${rootDir}/src/main/swagger/partnerMailNotificationApi.json"]
def swaggerOutputDir = file('build/swagger')
task generateApi {
    swaggerInput.each { input ->
        inputs.file(swaggerInput)
        outputs.dir(swaggerOutputDir)
        doLast {
            def config = new CodegenConfigurator()
            config.setInputSpec(input)
            config.setOutputDir(swaggerOutputDir.path)
            config.setLang('java')
            config.setAdditionalProperties([
                    'invokerPackage': 'com.lykke.trade.volume.monitoring.service.loader.http.generated.client',
                    'modelPackage'  : 'com.lykke.trade.volume.monitoring.service.loader.http.generated.client.model',
                    'apiPackage'    : 'com.lykke.trade.volume.monitoring.service.loader.http.generated.client.api',
                    'dateLibrary'   : 'java8'
            ])
            new DefaultGenerator().opts(config.toClientOptInput()).generate()
        }
    }
}

clean.doFirst {
    delete(swaggerOutputDir)
}

configurations {
    swagger
}

sourceSets {
    swagger {
        compileClasspath = configurations.swaggerCompile
        java {
            srcDir file("${project.buildDir.path}/swagger/src/main/java")
        }
    }
    main {
        compileClasspath += swagger.output
        runtimeClasspath += swagger.output
    }
    test {
        compileClasspath += swagger.output
        runtimeClasspath += swagger.output
    }
}

compileSwaggerJava.dependsOn generateApi
classes.dependsOn swaggerClasses
compileJava.dependsOn compileSwaggerJava

ext {
    kotlin_version = '1.2.10'

    springfox_swagger2 = "2.9.2"
    springfox_swagger_ui = "2.9.2"

    lmax_disruptor_version = '3.4.2'
    commons_validator_version = '1.6'

    kotlin_utils_version = '0.0.13-SNAPSHOT'
    me_message_subscriber_version = '1.0.4-SNAPSHOT'
    client_accounts_lib_version = '1.0.1-SNAPSHOT'

    gson_version = '2.8.1'
    okhttp_version = '2.7.5'

    kotlin_mockito_version = '1.6.0'
}

configurations {
    compile.exclude module: 'spring-boot-starter-logging'
}

dependencies {
    swaggerCompile 'io.swagger:swagger-annotations:1.5.16'
    swaggerCompile "com.squareup.okhttp:okhttp:$okhttp_version"
    swaggerCompile "com.squareup.okhttp:logging-interceptor:$okhttp_version"
    swaggerCompile "com.google.code.gson:gson:$gson_version"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    compile "org.bitbucket.lykke:kotlin-utils:$kotlin_utils_version"
    compile "org.bitbucket.lykke:me-message-subscriber:$me_message_subscriber_version"
    compile "org.bitbucket.lykke:common-client-accounts:$client_accounts_lib_version"

    compile("org.springframework.boot:spring-boot-starter-log4j2")
    compile "com.lmax:disruptor:$lmax_disruptor_version"
    compile "commons-validator:commons-validator:$commons_validator_version"

    compile "io.springfox:springfox-swagger2:$springfox_swagger2"
    compile "io.springfox:springfox-swagger-ui:$springfox_swagger_ui"

    runtime "com.squareup.okhttp:okhttp:$okhttp_version"
    runtime "com.squareup.okhttp:logging-interceptor:$okhttp_version"
    runtime "com.google.code.gson:gson:$gson_version"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile "com.nhaarman:mockito-kotlin:$kotlin_mockito_version"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xno-param-assertions', '-Xno-call-assertions']
        jvmTarget = '1.8'
    }
}

bootDistZip {
    archiveName "${project.name}-${project.version}.zip"
    into("${project.name}-${project.version}.zip") {
        from "${rootProject.projectDir}/src/dist"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '1.8'
    }
}

mainClassName = "com.lykke.trade.volume.monitoring.service.ApplicationKt"
distTar.enabled = false
