{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "",
    "termsOfService": "https://lykke.com/city/terms_of_use"
  },
  "host": "public-api.lykke.com",
  "basePath": "/",
  "paths": {
    "/api/AssetPairs/rate": {
      "get": {
        "tags": [
          "AssetPairs"
        ],
        "summary": "Get all asset pairs rates",
        "operationId": "ApiAssetPairsRateGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiAssetPairRateModel"
              }
            }
          }
        }
      }
    },
    "/api/AssetPairs/rate/{assetPairId}": {
      "get": {
        "tags": [
          "AssetPairs"
        ],
        "summary": "Get rates for asset pair",
        "operationId": "ApiAssetPairsRateByAssetPairIdGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "assetPairId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiAssetPairRateModel"
            }
          }
        }
      }
    },
    "/api/AssetPairs/dictionary/{market}": {
      "get": {
        "tags": [
          "AssetPairs"
        ],
        "summary": "Get asset pairs dictionary",
        "operationId": "ApiAssetPairsDictionaryByMarketGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "market",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "Spot",
              "Mt"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiAssetPair"
              }
            }
          }
        }
      }
    },
    "/api/AssetPairs/rate/history": {
      "post": {
        "tags": [
          "AssetPairs"
        ],
        "summary": "Get rates for specified period",
        "description": "Available period values\r\n \r\n    \"Sec\",\r\n    \"Minute\",\r\n    \"Hour\",\r\n    \"Day\",\r\n    \"Month\",",
        "operationId": "ApiAssetPairsRateHistoryPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssetPairsRateHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiAssetPairRateModel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/api/AssetPairs/rate/history/{assetPairId}": {
      "post": {
        "tags": [
          "AssetPairs"
        ],
        "summary": "Get rates for specified period and asset pair",
        "description": "Available period values\r\n \r\n    \"Sec\",\r\n    \"Minute\",\r\n    \"Hour\",\r\n    \"Day\",\r\n    \"Month\",",
        "operationId": "ApiAssetPairsRateHistoryByAssetPairIdPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "assetPairId",
            "in": "path",
            "description": "Asset pair Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "request",
            "in": "body",
            "description": "Request model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AssetPairRateHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiAssetPairHistoryRateModel"
            }
          }
        }
      }
    },
    "/api/Assets/dictionary": {
      "get": {
        "tags": [
          "Assets"
        ],
        "summary": "Get assets dictionary",
        "operationId": "ApiAssetsDictionaryGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiAsset"
              }
            }
          }
        }
      }
    },
    "/api/Candles/history/{market}/available": {
      "get": {
        "tags": [
          "Candles"
        ],
        "summary": "Get list of supported asset pairs for the given market type.",
        "operationId": "ApiCandlesHistoryByMarketAvailableGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "market",
            "in": "path",
            "description": "The market type. Acceptable values: Spot, Mt.",
            "required": true,
            "type": "string",
            "enum": [
              "Spot",
              "Mt"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/api/Candles/history/{assetPairId}/{market}": {
      "post": {
        "tags": [
          "Candles"
        ],
        "summary": "[Obsolete] Get candles for specified period and asset pair. Please, use the -GET- api/history/{market}/{assetPair}/{period}/{type}/{from}/{to} method instead of this.",
        "description": "Available markets\r\n    Spot,\r\n    Mt\r\nAvailable period values\r\n    Sec,\r\n    Minute,\r\n    Min5,\r\n    Min15,\r\n    Min30,\r\n    Hour,\r\n    Hour4,\r\n    Hour6,\r\n    Hour12,\r\n    Day,\r\n    Week,\r\n    Month",
        "operationId": "ApiCandlesHistoryByAssetPairIdByMarketPost",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "assetPairId",
            "in": "path",
            "description": "Asset pair Id",
            "required": true,
            "type": "string"
          },
          {
            "name": "market",
            "in": "path",
            "description": "Market type",
            "required": true,
            "type": "string",
            "enum": [
              "Spot",
              "Mt"
            ]
          },
          {
            "name": "request",
            "in": "body",
            "description": "Request model",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CandlesHistoryRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CandlesHistoryResponse[ApiCandle]"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        },
        "deprecated": true
      }
    },
    "/api/Candles/history/{market}/{assetPair}/{period}/{type}/{from}/{to}": {
      "get": {
        "tags": [
          "Candles"
        ],
        "summary": "Get candles for specified period and asset pair",
        "operationId": "ApiCandlesHistoryByMarketByAssetPairByPeriodByTypeByFromByToGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "market",
            "in": "path",
            "description": "The market type. Acceptable values: Spot, Mt.",
            "required": true,
            "type": "string",
            "enum": [
              "Spot",
              "Mt"
            ]
          },
          {
            "name": "assetPair",
            "in": "path",
            "description": "The asset pair Id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "period",
            "in": "path",
            "description": "The time period. Acceptable values: Sec, Minute, Min5, Min15, Min30, Hour, Hour4, Hour6, Hour12, Day, Week, Month.",
            "required": true,
            "type": "string",
            "enum": [
              "Sec",
              "Minute",
              "Min5",
              "Min15",
              "Min30",
              "Hour",
              "Hour4",
              "Hour6",
              "Hour12",
              "Day",
              "Week",
              "Month"
            ]
          },
          {
            "name": "type",
            "in": "path",
            "description": "The price type. Acceptable values: Bid, Ask, Mid, Trades.",
            "required": true,
            "type": "string",
            "enum": [
              "Bid",
              "Ask",
              "Mid",
              "Trades"
            ]
          },
          {
            "name": "from",
            "in": "path",
            "description": "The request's starting date and time.",
            "required": true,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "to",
            "in": "path",
            "description": "The request's finishing date and time.",
            "required": true,
            "type": "string",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CandlesHistoryResponse[ApiCandle2]"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ApiError"
            }
          }
        }
      }
    },
    "/api/Company/ownershipStructure": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get assets dictionary",
        "operationId": "ApiCompanyOwnershipStructureGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyInfoModels"
            }
          }
        }
      }
    },
    "/api/Company/registrationsCount": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get registrations count",
        "operationId": "ApiCompanyRegistrationsCountGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistrationsCountModel"
            }
          }
        }
      }
    },
    "/api/IsAlive": {
      "get": {
        "tags": [
          "IsAlive"
        ],
        "operationId": "ApiIsAliveGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/IsAliveResponse"
            }
          }
        }
      }
    },
    "/api/Market": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Get trade volumes for all available assetpairs",
        "operationId": "ApiMarketGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApiMarketData"
              }
            }
          }
        }
      }
    },
    "/api/Market/{assetPair}": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Get trade volume for asset pair",
        "operationId": "ApiMarketByAssetPairGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "assetPair",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiMarketData"
            }
          }
        }
      }
    },
    "/api/Market/capitalization/{market}": {
      "get": {
        "tags": [
          "Market"
        ],
        "summary": "Get trade volume for asset",
        "operationId": "ApiMarketCapitalizationByMarketGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "market",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ApiMarketCapitalizationData"
            }
          }
        }
      }
    },
    "/api/OrderBook": {
      "get": {
        "tags": [
          "OrderBook"
        ],
        "summary": "Get all orderbooks",
        "operationId": "ApiOrderBookGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IOrderBook"
              }
            }
          }
        }
      }
    },
    "/api/OrderBook/{assetPairId}": {
      "get": {
        "tags": [
          "OrderBook"
        ],
        "summary": "Get orderbook for specified asset pair",
        "operationId": "ApiOrderBookByAssetPairIdGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "assetPairId",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IOrderBook"
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Root"
        ],
        "operationId": "Get",
        "consumes": [],
        "produces": [],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Trades/Last/{assetPair}/{n}": {
      "get": {
        "tags": [
          "Trades"
        ],
        "summary": "Get trade volumes for all available assetpairs",
        "operationId": "ApiTradesLastByAssetPairByNGet",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "assetPair",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "n",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Trades/{assetPairId}": {
      "get": {
        "tags": [
          "Trades"
        ],
        "summary": "Provides latest trades for given asset pair",
        "operationId": "ApiTradesByAssetPairIdGet",
        "consumes": [],
        "produces": [],
        "parameters": [
          {
            "name": "assetPairId",
            "in": "path",
            "description": "Id of asset pair",
            "required": true,
            "type": "string"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "How many items to skip",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "take",
            "in": "query",
            "description": "How many items to take",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/home/Version": {
      "get": {
        "tags": [
          "Version"
        ],
        "summary": "Get current app version",
        "operationId": "HomeVersionGet",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json",
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VersionModel"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ApiAssetPairRateModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "bid": {
          "format": "double",
          "type": "number"
        },
        "ask": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ApiAssetPair": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accuracy": {
          "format": "int32",
          "type": "integer"
        },
        "invertedAccuracy": {
          "format": "int32",
          "type": "integer"
        },
        "baseAssetId": {
          "type": "string"
        },
        "quotingAssetId": {
          "type": "string"
        }
      }
    },
    "AssetPairsRateHistoryRequest": {
      "type": "object",
      "properties": {
        "assetPairIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "period": {
          "enum": [
            "Sec",
            "Minute",
            "Min5",
            "Min15",
            "Min30",
            "Hour",
            "Hour4",
            "Hour6",
            "Hour12",
            "Day",
            "Week",
            "Month"
          ],
          "type": "string"
        },
        "dateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ApiError": {
      "type": "object",
      "properties": {
        "code": {
          "enum": [
            "InvalidInput"
          ],
          "type": "string"
        },
        "msg": {
          "type": "string"
        }
      }
    },
    "AssetPairRateHistoryRequest": {
      "type": "object",
      "properties": {
        "period": {
          "enum": [
            "Sec",
            "Minute",
            "Min5",
            "Min15",
            "Min30",
            "Hour",
            "Hour4",
            "Hour6",
            "Hour12",
            "Day",
            "Week",
            "Month"
          ],
          "type": "string"
        },
        "dateTime": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "ApiAssetPairHistoryRateModel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "bid": {
          "format": "double",
          "type": "number"
        },
        "ask": {
          "format": "double",
          "type": "number"
        },
        "tradingVolume": {
          "format": "double",
          "type": "number"
        },
        "tradingOppositeVolume": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ApiAsset": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayId": {
          "type": "string"
        },
        "bitcoinAssetId": {
          "type": "string"
        },
        "bitcoinAssetAddress": {
          "type": "string"
        },
        "symbol": {
          "type": "string"
        },
        "accuracy": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CandlesHistoryRequest": {
      "required": [
        "period",
        "type",
        "dateFrom",
        "dateTo"
      ],
      "type": "object",
      "properties": {
        "period": {
          "enum": [
            "Sec",
            "Minute",
            "Min5",
            "Min15",
            "Min30",
            "Hour",
            "Hour4",
            "Hour6",
            "Hour12",
            "Day",
            "Week",
            "Month"
          ],
          "type": "string"
        },
        "type": {
          "enum": [
            "Bid",
            "Ask",
            "Mid",
            "Trades"
          ],
          "type": "string"
        },
        "dateFrom": {
          "format": "date-time",
          "type": "string"
        },
        "dateTo": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CandlesHistoryResponse[ApiCandle]": {
      "type": "object",
      "properties": {
        "assetPair": {
          "type": "string"
        },
        "period": {
          "enum": [
            "Sec",
            "Minute",
            "Min5",
            "Min15",
            "Min30",
            "Hour",
            "Hour4",
            "Hour6",
            "Hour12",
            "Day",
            "Week",
            "Month"
          ],
          "type": "string"
        },
        "dateFrom": {
          "format": "date-time",
          "type": "string"
        },
        "dateTo": {
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "enum": [
            "Bid",
            "Ask",
            "Mid",
            "Trades"
          ],
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiCandle"
          }
        }
      }
    },
    "ApiCandle": {
      "type": "object",
      "properties": {
        "t": {
          "format": "date-time",
          "type": "string"
        },
        "o": {
          "format": "double",
          "type": "number"
        },
        "c": {
          "format": "double",
          "type": "number"
        },
        "h": {
          "format": "double",
          "type": "number"
        },
        "l": {
          "format": "double",
          "type": "number"
        },
        "v": {
          "format": "double",
          "type": "number"
        },
        "ov": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CandlesHistoryResponse[ApiCandle2]": {
      "type": "object",
      "properties": {
        "assetPair": {
          "type": "string"
        },
        "period": {
          "enum": [
            "Sec",
            "Minute",
            "Min5",
            "Min15",
            "Min30",
            "Hour",
            "Hour4",
            "Hour6",
            "Hour12",
            "Day",
            "Week",
            "Month"
          ],
          "type": "string"
        },
        "dateFrom": {
          "format": "date-time",
          "type": "string"
        },
        "dateTo": {
          "format": "date-time",
          "type": "string"
        },
        "type": {
          "enum": [
            "Bid",
            "Ask",
            "Mid",
            "Trades"
          ],
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiCandle2"
          }
        }
      }
    },
    "ApiCandle2": {
      "type": "object",
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "open": {
          "format": "double",
          "type": "number"
        },
        "close": {
          "format": "double",
          "type": "number"
        },
        "high": {
          "format": "double",
          "type": "number"
        },
        "low": {
          "format": "double",
          "type": "number"
        },
        "volume": {
          "format": "double",
          "type": "number"
        },
        "oppositeVolume": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CompanyInfoModels": {
      "type": "object",
      "properties": {
        "totalLykkeCoins": {
          "format": "double",
          "type": "number"
        },
        "privateWalletsCoins": {
          "format": "double",
          "type": "number"
        },
        "tradingWalletsCoins": {
          "format": "double",
          "type": "number"
        },
        "treasuryCoins": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "RegistrationsCountModel": {
      "type": "object",
      "properties": {
        "count": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "IsAliveResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "env": {
          "type": "string"
        }
      }
    },
    "ApiMarketData": {
      "type": "object",
      "properties": {
        "assetPair": {
          "type": "string"
        },
        "volume24H": {
          "format": "double",
          "type": "number"
        },
        "lastPrice": {
          "format": "double",
          "type": "number"
        },
        "bid": {
          "format": "double",
          "type": "number"
        },
        "ask": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "ApiMarketCapitalizationData": {
      "type": "object",
      "properties": {
        "amount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "IOrderBook": {
      "type": "object",
      "properties": {
        "assetPair": {
          "type": "string",
          "readOnly": true
        },
        "isBuy": {
          "type": "boolean",
          "readOnly": true
        },
        "timestamp": {
          "format": "date-time",
          "type": "string",
          "readOnly": true
        },
        "prices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IVolumePrice"
          },
          "readOnly": true
        }
      }
    },
    "IVolumePrice": {
      "type": "object",
      "properties": {
        "volume": {
          "format": "double",
          "type": "number",
          "readOnly": true
        },
        "price": {
          "format": "double",
          "type": "number",
          "readOnly": true
        }
      }
    },
    "VersionModel": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {}
}